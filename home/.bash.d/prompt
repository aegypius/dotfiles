#!/usr/bin/env bash

PROMPT_DIRTRIM=2

function prompt_git_branch {
  test "${HOME}" != "${PWD}" || return
  ref=$(git symbolic-ref HEAD 2>/dev/null) || return
  echo ""${ref#refs/heads/}""
}

function prompt_session_type {
  ([ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]) && SESSION_TYPE=remote/ssh;
  ([ -f /proc/1/cgroup ] && grep ':\/system.slice\/docker-[a-z0-9]*\.scope' /proc/1/cgroup > /dev/null  ) && SESSION_TYPE=remote/docker;
  echo -e $SESSION_TYPE
}

function prompt_session {
  case $(prompt_session_type) in
    remote/*)
      echo -e "\u@\h"
      ;;
    *)
      echo -e "\u"
      ;;
  esac;
}

# ( x=`tput op` y=`printf %$((${COLUMNS}-6))s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done; )

function prompt {
  colors=$(tput colors)

  if (($colors >= 256)); then
    local BG_DARK_GREY="\[$(tput setab 234)\]"
    local FG_DARK_GREY="\[$(tput setaf 234)\]"

    local BG_GREY="\[$(tput setab 237)\]"
    local FG_GREY="\[$(tput setaf 237)\]"

    local BG_LIGHT_GREY="\[$(tput setab 240)\]"
    local FG_LIGHT_GREY="\[$(tput setaf 240)\]"

    local BG_BLUE="\[$(tput setab 25)\]"
    local FG_BLUE="\[$(tput setaf 25)\]"

    local BG_RED="\[$(tput setab 124)\]"
    local FG_RED="\[$(tput setaf 124)\]"

    local C_RESET="\[\e[0m\]"

    local S_ARROW=""
  fi

  local PROMPT_SESSION=$(prompt_session);
  case $(prompt_session_type) in
    remote/ssh)
      PROMPT_SESSION=" ${PROMPT_SESSION}"
      ;;
    remote/docker)
      PROMPT_SESSION="© ${PROMPT_SESSION}"
      ;;
  esac

  if [ "$UID" == 0 ]; then
    local user="${C_RESET}${BG_RED} ${PROMPT_SESSION} ${BG_GREY}${C_RESET}${FG_RED}${S_ARROW}"
  else
    local user="${BG_BLUE} ${PROMPT_SESSION} ${BG_LIGHT_GREY}${FG_BLUE}${S_ARROW}"
  fi

  local cmd="${BG_LIGHT_GREY}${FG_DARK_GREY}\w ${BG_DARK_GREY}${FG_LIGHT_GREY}${S_ARROW}"
  local git_branch="${BG_DARK_GREY}${FG_LIGHT_GREY}\$(prompt_git_branch) ${C_RESET}${FG_DARK_GREY}${S_ARROW}"

	if (($colors >= 256)); then
	  export PS1="${C_RESET}${user} ${cmd} ${git_branch} ${C_RESET}";
	fi
}

prompt

# vim:foldmethod=marker:foldlevel=0
